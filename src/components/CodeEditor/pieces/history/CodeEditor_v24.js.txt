

// Importing necessary modules from react and react-native
import React, { useRef, useEffect, useState } from 'react'; 
import { RichEditor } from 'react-native-pell-rich-editor'; 
import { StyleSheet, TouchableOpacity } from 'react-native';
import Icon from 'react-native-vector-icons/FontAwesome'; 

// CodeEditor function component
export const CodeEditor = ({ initialCode, onCodeChanged }) => {
  // Creating a reference for the RichEditor component
  const richText = useRef(null); 
  
  // State hook to keep track of the editor's content
  const [content, setContent] = useState(initialCode || ''); 
  
  // Using useEffect to set the initial content of the editor once after first render
  useEffect(() => {
    if (initialCode) {
      setContent(initialCode);
      // Setting the initial content to the editor using its reference
      richText.current.setContentHTML(initialCode); 
    }
  }, [initialCode]); 
  
  // Function to handle changes in the editor's content
  const onContentChange = (text) => {
    setContent(text);
    // Checking if onCodeChanged callback is passed as props and calling it with text as argument
    if (onCodeChanged) {
      onCodeChanged(text);
    }
  };
  
  return (
    <>
      {/* RichEditor component for editing the code */}
      <RichEditor
        ref={richText}
        initialContentHTML={content}
        onChange={onContentChange}
      />
      {/* IconButton to save the changes */}
      <TouchableOpacity 
        style={styles.fab}
        onPress={() => {
          // Logging the current text editor content to the console on button press
          console.log('Button pressed. Current content:', content);
        }}
      >
        <Icon name="check" size={30} color="#FFF" />
      </TouchableOpacity>
    </>
  );
}

// Object holding the styling for the CodeEditor and button
const styles = StyleSheet.create({
  codeEditor: {
    flex: 1,
    borderWidth: 1,
    borderStyle: 'solid',
    borderColor: '#000',
  },
  fab: {
    position: 'absolute',
    right: 30,
    bottom: 30,
    backgroundColor: '#03A9F4',
    width: 56,
    height: 56,
    borderRadius: 28,
    alignItems: 'center',
    justifyContent: 'center',
    elevation: 8
  }
});

